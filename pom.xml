<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>opensabre-base-dependencies</artifactId>
        <groupId>io.github.opensabre</groupId>
        <version>0.1.1</version>
    </parent>

    <artifactId>base-organization</artifactId>
    <version>0.0.1</version>
    <packaging>jar</packaging>

    <name>base-organization</name>
    <url>https://github.com/opensabre/base-organization</url>
    <description>Demo Organization project for Spring Boot</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!--  编译   -->
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <native-build-tools-plugin.version>0.9.28</native-build-tools-plugin.version>
    </properties>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <dependencies>
        <!-- opensabre starter -->
        <dependency>
            <groupId>io.github.opensabre</groupId>
            <artifactId>opensabre-starter-persistence</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.github.ulisesbocchio</groupId>
                    <artifactId>jasypt-spring-boot-starter</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.github.opensabre</groupId>
            <artifactId>opensabre-starter-register</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.opensabre</groupId>
            <artifactId>opensabre-starter-cache</artifactId>
        </dependency>
        <!--security资源服务-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-oauth2-client</artifactId>-->
<!--        </dependency>-->
        <!--测试框架-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--test数据库-->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.graalvm.buildtools</groupId>
                    <artifactId>native-maven-plugin</artifactId>
                    <version>${native-build-tools-plugin.version}</version>
                    <configuration>
                        <skipNativeTests>true</skipNativeTests>
                    </configuration>
                    <extensions>true</extensions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!--springboot官方打包插件 可打包docker镜像-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--支持MVC参数如@RequestParam注解无须加value，默认为变量名-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <parameters>true</parameters>
                </configuration>
            </plugin>
            <!-- git commit信息生成 -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <!-- *NOTE*: 默认是initialize阶段执行，可以修改为其他阶段 -->
                        <phase>initialize</phase>
                    </execution>
                </executions>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <injectIntoSysProperties>true</injectIntoSysProperties>
                </configuration>
            </plugin>
            <!-- docker镜像构建 -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
<!--                    <plugin>-->
<!--                        <groupId>org.graalvm.buildtools</groupId>-->
<!--                        <artifactId>native-maven-plugin</artifactId>-->
<!--                        <version>0.10.3</version>-->
<!--                        <configuration>-->
<!--                            &lt;!&ndash; imageName用于设置生成的二进制文件名称 &ndash;&gt;-->
<!--                            <imageName>${project.artifactId}</imageName>-->
<!--                            &lt;!&ndash; mainClass用于指定main方法类路径 &ndash;&gt;-->
<!--                            <mainClass>io.github.opensabre.organization.OrganizationApplication</mainClass>-->
<!--                            <buildArgs>-->
<!--                                &#45;&#45;no-fallback-->
<!--                            </buildArgs>-->
<!--                            <skipNativeTests>true</skipNativeTests>-->
<!--                            <verbose>true</verbose>-->
<!--                        </configuration>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <id>build-native</id>-->
<!--                                <goals>-->
<!--                                    <goal>compile-no-fork</goal>-->
<!--                                </goals>-->
<!--                                <phase>package</phase>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                    </plugin>-->
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
